<?php
/**
 * Created by PhpStorm.
 * User: goku
 * Date: 19/08/2014
 * Time: 08:54
 */

namespace Demo\Model\Dao;

use Demo\Model\Entity\RankNick;
use Kdyby\Doctrine\Exception;


/**
 * Interface IGameDao
 * @package Demo\Model\Dao
 */
interface IRankNickDao
{
    /**
     * Find entity in storage by id.
     * @param int $id
     * @return RankNick
     */
    public function find($id);

    /**
     * Find all entities in storage by criteria with given order.
     * @param array $criteria
     * @param array $orderBy
     * @param int $limit
     * @param int $offset
     * @return RankNick[]
     */
    public function findBy(array $criteria, array $orderBy, $limit, $offset);

    /**
     * Find one entity by criteria.
     * If there are more entities suitable for criteria, the first will be returned,
     * taking into account the orderBy parameters.
     * @param array $criteria
     * @param array $orderBy
     * @return RankNick
     */
    public function findOneBy(array $criteria, array $orderBy);

    /**
     * Count entities in storage by given criteria.
     * @param array $criteria
     * @return int
     */
    public function countBy(array $criteria);

    /**
     * Persist entity into storage.
     * @param RankNick $entity
     * @param bool $forceEntityIdOverAutoGenerated
     * @param bool $batchSize
     * @throws Exception
     */
    public function save(
        RankNick $entity,
        $forceEntityIdOverAutoGenerated = false,
        $batchSize = false
    );

    /**
     * Remove entity from storage.
     * @param RankNick $entity
     */
    public function delete(RankNick $entity);

    /**
     * Create empty entity, does not store in database
     * @return RankNick
     */
    public function getEmptyEntityObject();

    /**
     * Finishes any waiting queries from bath processing
     */
    public function finishBathQueriesStillInFront();

}
